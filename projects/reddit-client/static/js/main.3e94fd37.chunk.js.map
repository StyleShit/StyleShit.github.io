{"version":3,"sources":["Utils/Utils.js","components/Sidebar.js","components/Post.js","components/AutoComplete.js","components/Content.js","components/App.js","index.js"],"names":["redditGet","endpoint","params","a","httpParams","Object","keys","map","key","join","fetch","then","res","json","Sidebar","loadListing","listingData","onClick","e","listing","target","dataset","className","alt","src","name","icon","i","data-listing","Post","imageSrc","data","post","useState","showFullImage","setShowFullImage","flair","bg","link_flair_background_color","text","link_flair_text_color","thumbnail","num","createdAt","Date","created_utc","title","prev","link_flair_text","style","backgroundColor","color","rel","href","permalink","date","seconds","Math","floor","interval","timeSince","author","ups","toFixed","url","AutoComplete","placeholder","onItemSelected","term","setTerm","suggestions","setSuggestions","currentSuggestion","setCurrentSuggestion","isLoading","setIsLoading","useEffect","trim","keyupTimeout","setTimeout","type","q","results","children","slice","item","clearTimeout","value","onChange","onKeyUp","keyCode","which","length","display_name_prefixed","icon_img","Content","posts","loadMore","postsContainer","action","onSubmit","preventDefault","ref","id","App","useRef","setPosts","setListingData","next","after","toLowerCase","current","scrollTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e94fd37.chunk.js","sourcesContent":["\r\n// get reddit listing by endpoint ( e.g. /hot, /r/ProgrammerHumor, /u/pedro19 ) and parameters\r\nexport async function redditGet( endpoint, params )\r\n{\r\n    // reddit base URL\r\n    const BASE_URL = 'https://www.reddit.com';\r\n    var httpParams = '';\r\n\r\n    if( params )\r\n    {\r\n        // serialize `params` to HTTP GET parameters\r\n        httpParams = Object.keys( params ).map( key => {\r\n            return key + '=' + params[key];\r\n        }).join('&');\r\n    }\r\n\r\n    // build endpoint & fetch data\r\n    endpoint = `${ BASE_URL }/${ endpoint }.json?${ httpParams }`;\r\n\r\n    return fetch( endpoint ).then( res => res.json() );\r\n}","import React from 'react';\r\n\r\nexport default function Sidebar({ loadListing, listingData })\r\n{\r\n    function getClassName( listing )\r\n\t{\r\n        if( listingData.listing && listing === listingData.listing )\r\n            return 'active';\r\n\r\n        return '';\r\n    }\r\n\r\n    function onClick( e )\r\n    {\r\n        loadListing({ listing: e.target.dataset.listing });\r\n    }\r\n\r\n    const listings = [ \r\n        { name: 'Hot',  icon: 'lab la-hotjar' },\r\n        { name: 'New',  icon: 'las la-plus-circle' },\r\n        { name: 'Rising',  icon: 'las la-chart-area' },\r\n        { name: 'Controversial', icon: 'las la-bolt' },\r\n        { name: 'Top', icon: 'las la-trophy' }\r\n    ];\r\n    \r\n    return (\r\n        <div className=\"sidebar\">\r\n\r\n            <img className=\"reddit-logo\" alt=\"reddit-logo\" src=\"img/reddit-logo.svg\" />\r\n\r\n            <ul>\r\n                {\r\n                    listings.map(( { name, icon }, i ) => (\r\n                        <li key={ i } className={ getClassName( name ) } data-listing={ name } onClick={ onClick }>\r\n                            <i className={ icon }></i> { name }\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function Post({ post:{ data } })\r\n{\r\n    // determine if the full sized image will be shown\r\n    const [ showFullImage, setShowFullImage ] = useState( false );\r\n\r\n    // set flair styling\r\n    var flair = {\r\n        bg: data.link_flair_background_color,\r\n        text: data.link_flair_text_color === 'light' ? '#FFF' : '#000'\r\n    };\r\n\r\n\r\n    // determine post image src\r\n    var imageSrc;\r\n\r\n    switch( data.thumbnail )\r\n    {\r\n        case 'image':\r\n            imageSrc = \"img/default-thumb.png\";\r\n            break;\r\n            \r\n        case 'self':\r\n            imageSrc = \"img/default-thumb.png\";\r\n            break;\r\n\r\n        case 'default':\r\n            imageSrc = \"img/default-thumb.png\";\r\n            break;\r\n\r\n        default:\r\n            imageSrc = data.thumbnail;\r\n            break;\r\n    }\r\n\r\n    \r\n    // format big numbers with K & M\r\n    function formatNumber( num )\r\n    {\r\n        if( num > 1000000 )\r\n            return ( num / 1000000 ).toFixed( 1 ) + 'M';\r\n\r\n        if( num > 1000 )\r\n            return ( num / 1000 ).toFixed( 1 ) + 'K';\r\n\r\n        return num;\r\n    }\r\n\r\n\r\n    // return the time passed since `date` in words\r\n    function timeSince( date )\r\n    {\r\n        var seconds = Math.floor((new Date() - date) / 1000);\r\n        var interval = seconds / 31536000;\r\n      \r\n        // years\r\n        if( interval >= 1 )\r\n            return Math.floor(interval) + \" years\";\r\n\r\n        interval = seconds / 2592000;\r\n        \r\n        // months\r\n        if( interval >= 1 )\r\n            return Math.floor(interval) + \" months\";\r\n\r\n        interval = seconds / 86400;\r\n        \r\n        // days\r\n        if( interval >= 1 )\r\n            return Math.floor(interval) + \" days\";\r\n\r\n        interval = seconds / 3600;\r\n        \r\n        // hours\r\n        if( interval >= 1 )\r\n            return Math.floor(interval) + \" hours\";\r\n\r\n        interval = seconds / 60;\r\n        \r\n        // minutes\r\n        if( interval >= 1 )\r\n            return Math.floor(interval) + \" minutes\";\r\n\r\n        return Math.floor(seconds) + \" seconds\";\r\n      }\r\n\r\n\r\n    // when the post was created\r\n    var createdAt = new Date( data.created_utc * 1000 );\r\n\r\n    // url_overridden_by_dest\r\n\r\n    return (\r\n        <div className=\"reddit-post\">\r\n\r\n            <img alt={ data.title } src={ imageSrc } onClick={ e => { setShowFullImage( prev => !prev ) }} />\r\n\r\n            <div className=\"post-text\">\r\n                <h3 className=\"post-title\">\r\n                            \r\n                    { data.link_flair_text &&\r\n                        <span className=\"flair\" style={{ backgroundColor: flair.bg, color: flair.text }}>\r\n                            { data.link_flair_text}\r\n                        </span>\r\n                    }\r\n\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={ `https://www.reddit.com${ data.permalink }` }>\r\n                        { data.title } \r\n                    </a>\r\n                    \r\n                </h3>\r\n            \r\n                <span className=\"post-author\">\r\n                    <span className=\"muted\">Submitted { timeSince( createdAt ) } ago by </span>\r\n                    <i className=\"las la-user\"></i>\r\n                    <a target=\"_blank\" \r\n                        rel=\"noopener noreferrer\"\r\n                        href={ `https://www.reddit.com/user/${data.author}` }>{ data.author }</a>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"post-score\">\r\n                <span className=\"upvote\"></span>\r\n                { formatNumber( data.ups ) }\r\n                <span className=\"downvote\"></span>\r\n            </div>\r\n\r\n            { showFullImage &&\r\n                <div className=\"post-full-image\">\r\n                    <a href={ data.url } target=\"__blank\" rel=\"noopener noreferrer\">\r\n                        <img alt={ data.title } src={ data.url } />\r\n                    </a>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect  } from 'react';\r\nimport { redditGet } from '../Utils/Utils';\r\n\r\nexport default function AutoComplete({ placeholder, className, onItemSelected })\r\n{\r\n    const [ term, setTerm ] = useState( '' );\r\n    const [ suggestions, setSuggestions ] = useState( [] );\r\n    const [ currentSuggestion, setCurrentSuggestion ] = useState( -1 ); // represents an id in `suggestions` array\r\n    const [ isLoading, setIsLoading ] = useState( false );\r\n\r\n\r\n    // catch arrow keys & enter in the autocomplete input\r\n    function onKeyUp( e )\r\n    {\r\n        switch( e.keyCode || e.which )\r\n        {\r\n            // up arrow -> highlight previous suggestion\r\n            case 38:\r\n                if( currentSuggestion > 0 )\r\n                    setCurrentSuggestion( prev => prev - 1 );\r\n\r\n                else\r\n                    setCurrentSuggestion( suggestions.length - 1 );\r\n\r\n                break;\r\n\r\n            // down arrow -> highlight next suggestion\r\n            case 40:\r\n                if( currentSuggestion < suggestions.length -1 )\r\n                    setCurrentSuggestion( prev => prev + 1 );\r\n                else\r\n                    setCurrentSuggestion( 0 );\r\n                break;\r\n\r\n            // enter -> invoke the onItemSelected callback and reset everything\r\n            case 13:\r\n    \r\n                if( currentSuggestion !== -1 )\r\n                {\r\n                    onItemSelected( suggestions[currentSuggestion] );\r\n                    setTerm( '' );\r\n                    setSuggestions( [] );\r\n                    setCurrentSuggestion( -1 );\r\n                }\r\n\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n\r\n    // when the term changes, invoke the autocomplete\r\n    useEffect( () => {\r\n\r\n        if( term.trim() === '')\r\n        {\r\n            setSuggestions( [] );\r\n            return;\r\n        }\r\n\r\n        // set a timeout to prevent too many requests on keyup\r\n        const keyupTimeout = setTimeout( () => {\r\n\r\n            var params = {\r\n                type: 'sr',\r\n                q: term\r\n            };\r\n            \r\n            var endpoint = 'search';\r\n\r\n            setIsLoading( true );\r\n            \r\n            // send search term to the endpoint\r\n            redditGet( endpoint, params ).then( json => {\r\n\r\n                if( json.data )\r\n                {\r\n                    // set autocomplete suggestions\r\n                    var results = json.data.children.slice( 0, 5 );\r\n\r\n                    results = results.map( item => ( item.data ));\r\n                    setSuggestions( results) ;\r\n                }\r\n\r\n                setIsLoading( false );\r\n\r\n            });\r\n\r\n        }, 300 );\r\n\r\n        return() => {\r\n            // clear the timeout\r\n            clearTimeout( keyupTimeout );    \r\n        }\r\n    }, [ term ]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <i className=\"las la-search\"></i>\r\n            \r\n            <input type=\"text\" \r\n                className={ `autocomplete-input ${ className }` } \r\n                placeholder={ placeholder } \r\n                value={ term } \r\n                onChange={ e => setTerm( e.target.value ) }\r\n                onKeyUp={ onKeyUp } />\r\n\r\n            { isLoading &&\r\n                <span className=\"autocomplete-loader\"></span>\r\n            }\r\n\r\n            <div className=\"autocomplete-suggestions\">\r\n                {\r\n                    // display the autocomplete suggestions\r\n                    suggestions.map(( item, i ) => (\r\n                        <span className={ `suggestion ${ currentSuggestion === i ? 'current-suggestion' : '' }` } onClick={ () => { onItemSelected( item ) } } key={ i }>\r\n                            <img alt={ item.display_name_prefixed } src={ item.icon_img ? item.icon_img : 'img/default-sr-icon.png' } />\r\n                            { item.display_name_prefixed }\r\n                        </span>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Post from './Post';\r\nimport AutoComplete from './AutoComplete';\r\n\r\nexport default function Content({ listingData, posts, loadMore, postsContainer, isLoading, loadListing })\r\n{\r\n\r\n    // a callback to trigger when an item was selected from the autocomplete.\r\n    function onItemSelected( item )\r\n\t{\r\n        // load the selected subrteddit\r\n\t\tloadListing({ \r\n            listing: item.display_name_prefixed,\r\n            icon: item.icon_img ? item.icon_img : 'img/default-sr-icon.png'\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content\">\r\n\r\n            <div className=\"top-bar\">\r\n                <h2 className=\"listing-name\">\r\n                    { listingData.icon && !isLoading &&\r\n                        <img alt={ `${ listingData.listing } logo` } src={ listingData.icon } />\r\n                    }\r\n\r\n                    { listingData.listing && !isLoading ? listingData.listing : 'Loading...' }\r\n                </h2>\r\n\r\n                <div className=\"top-bar-right\">\r\n                    \r\n                    <div className=\"search-container\">\r\n                        <form action=\"#\" onSubmit={ e => e.preventDefault() }>\r\n                            <AutoComplete className=\"search-input\" placeholder=\"Search\" onItemSelected={ onItemSelected } />\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"profile-container\">\r\n                        <i className=\"las la-user\"></i> David\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"posts-container\" ref={ postsContainer }>\r\n                {\r\n                    // print all posts\r\n                    posts.map( ( post ) => {\r\n                        return (\r\n                            <Post key={ post.data.id } post={ post } />\r\n                        )\r\n                    })\r\n                }\r\n\r\n                {\t\r\n                    // show load more button only if there is an active listing shown\r\n                    listingData.listing && !isLoading &&\r\n                    <button className=\"load-more-btn\" onClick={ loadMore }>Load More</button>\r\n                }\r\n\r\n                {   \r\n                    // show loader if the application is loading something\r\n                    isLoading &&\r\n                    <div className=\"loader\"></div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport { redditGet } from '../Utils/Utils';\nimport Sidebar from './Sidebar';\nimport Content from './Content';\n\nimport './css/App.css';\n\nfunction App() \n{\n\tconst postsContainer = useRef( null );\n\tconst [ posts, setPosts ] = useState( [] );\n\tconst [ listingData, setListingData ] = useState( {} );\n\tconst [ isLoading, setIsLoading ] = useState( true );\n\n\t// lodd listing by name\n\t// set `next = true` to load next page of current listing\n\tfunction loadListing( { listing, icon }, next = false )\n\t{\n\t\tsetIsLoading( true );\n\t\tvar params = next ? { after: listingData.after } : {};\n\n\t\t// reset posts array if it's a new listing, \n\t\t// to avoid merging the current posts with the new ones\n\t\tif( !next )\n\t\t\tsetPosts( [] );\n\n\t\t// fetch listing data\n\t\tredditGet( listing.toLowerCase(), params ).then( json => {\n\t\t\t\n\t\t\t// append new posts\n\t\t\tif( next )\n\t\t\t\tsetPosts( prev => [ ...prev, ...json.data.children ]);\n\t\t\t\t\n\t\t\t// remove previous posts and put the new ones\n\t\t\telse\n\t\t\t{\n\t\t\t\tsetPosts( json.data.children );\n\t\t\t\tpostsContainer.current.scrollTop = 0;\n\t\t\t}\n\n\t\t\t\t\n\t\t\tsetListingData({ listing, after: json.data.after, icon });\n\t\t\tsetIsLoading( false );\n\n        });\n\t}\n\n\t// load next page for current listing\n\tfunction loadMore()\n\t{\n\t\tsetIsLoading( true );\n\t\tloadListing( listingData, true );\n\t}\n\n\n\t// load default listing on mount\n\tuseEffect( () => {\n\t\tloadListing({ listing: 'Hot' }); \n\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<div className=\"reddit-client-container\">\n\t\t\t\n\t\t\t<Sidebar loadListing={ loadListing } listingData={ listingData } />\n\t\t\t\n\t\t\t<Content listingData={ listingData } \n\t\t\t\tposts={ posts } \n\t\t\t\tloadMore={ loadMore } \n\t\t\t\tpostsContainer={ postsContainer } \n\t\t\t\tisLoading={ isLoading } \n\t\t\t\tloadListing={ loadListing } />\t\t\t\n\t\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}